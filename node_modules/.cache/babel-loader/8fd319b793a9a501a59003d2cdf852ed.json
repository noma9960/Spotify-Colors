{"ast":null,"code":"var _jsxFileName = \"/Users/nmargalit/spotify-colors/src/Colors.js\";\nimport logo from \"./logo.svg\";\nimport './Colors.css';\nimport Results from './Results.js';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findColor = () => {\n      //fetching from api, based on those values, change state of \n      console.log(\"hi\");\n      fetch(\"google.com\").then(resp => {\n        console.log(resp);\n      }).catch(e => {\n        console.log(e);\n      });\n      var tempo = 123;\n\n      if (tempo > 0 && tempo <= 80) {\n        this.setState({\n          hue: 268\n        });\n      }\n\n      if (tempo > 80 && tempo <= 100) {\n        this.setState({\n          hue: 194\n        });\n      }\n\n      if (tempo > 100 && tempo <= 150) {\n        this.setState({\n          hue: 128\n        });\n      }\n\n      if (tempo > 150 && tempo <= 170) {\n        this.setState({\n          hue: 304\n        });\n      }\n\n      if (tempo > 150 && tempo <= 190) {\n        this.setState({\n          hue: 48\n        });\n      }\n\n      if (tempo > 190 && tempo <= 1000) {\n        this.setState({\n          hue: 7\n        });\n      }\n\n      this.setState({\n        display1: \"none\"\n      });\n      this.setState({\n        display2: \"block\"\n      });\n    };\n\n    this.goBack = () => {\n      this.setState({\n        display2: \"none\"\n      });\n      this.setState({\n        display1: \"block\"\n      });\n    };\n\n    this.state = {\n      display1: \"block\",\n      display2: \"none\",\n      hue: \"\",\n      saturation: \"\",\n      light: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Colors-box\",\n        style: {\n          display: this.state.display1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p1\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"link\",\n          name: \"link\",\n          placeholder: \"insert a spotify link!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.findColor(),\n          class: \"button\",\n          children: \"find the color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Results-box\",\n        style: {\n          display: this.state.display2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p1\",\n          children: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this), \"your hue is \", this.state.hue, \"your saturation is \", this.state, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.goBack(),\n          class: \"button\",\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/Colors.js"],"names":["Results","React","Component","Colors","constructor","props","findColor","console","log","fetch","then","resp","catch","e","tempo","setState","hue","display1","display2","goBack","state","saturation","light","render","display"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './Colors.css';\nimport Results from './Results.js';\nimport React, {Component} from \"react\";\n\nclass Colors extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      display1:\"block\",\n      display2:\"none\",\n      hue: \"\",\n      saturation: \"\",\n      light: \"\"\n    }\n  }\n\nfindColor = () => { //fetching from api, based on those values, change state of \n  console.log(\"hi\")\n  fetch(\"google.com\").then((resp)=>{\n    console.log(resp)\n  }).catch((e)=>{\n    console.log(e)\n  })\n  var tempo = 123;\n  \n  if(tempo > 0 && tempo <= 80){\n    this.setState({hue: 268})\n  }\n\n  if(tempo > 80 && tempo <= 100){\n    this.setState({hue: 194})\n  } \n\n  if(tempo > 100 && tempo <= 150){\n    this.setState({hue: 128})\n  } \n\n  if(tempo > 150 && tempo <= 170){\n    this.setState({hue: 304})\n  } \n\n  if(tempo > 150 && tempo <= 190){\n    this.setState({hue: 48})\n  }\n\n  if(tempo > 190 && tempo <= 1000){\n    this.setState({hue: 7})\n  }\n\n  this.setState({display1:\"none\"});\n  this.setState({display2: \"block\"});\n}\n\ngoBack = () => {\n  this.setState({display2: \"none\"});\n  this.setState({display1: \"block\"});\n}\n  render() {\n    return(\n      <div className=\"Colors\">\n     <div className=\"Colors-box\" style={{display: this.state.display1}}>\n       <p class=\"p1\">spotify colors</p>\n        <input type=\"text\" id=\"link\" name=\"link\" placeholder=\"insert a spotify link!\"></input> <br/>\n          <button onClick={()=>this.findColor()} class=\"button\">find the color</button>\n      </div>\n      <div className=\"Results-box\" style={{display: this.state.display2}}>\n       <p class=\"p1\">red</p>\n        your hue is {this.state.hue}\n        your saturation is {this.state}\n          <button onClick={()=>this.goBack()} class=\"button\">go back</button>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}