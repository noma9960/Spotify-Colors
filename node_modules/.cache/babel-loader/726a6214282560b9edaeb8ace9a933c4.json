{"ast":null,"code":"var _jsxFileName = \"/Users/nmargalit/spotify-colors/src/Colors.js\";\nimport logo from \"./logo.svg\";\nimport './Colors.css';\nimport Results from './Results.js';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findColor = () => {\n      //fetching from api, based on those values, change state of \n      console.log(\"hi\");\n      fetch(\"google.com\").then(resp => {\n        console.log(resp);\n      }).catch(e => {\n        console.log(e);\n      });\n      var tempo = 123;\n      this.setState({\n        display1: \"none\"\n      });\n      this.setState({\n        display2: \"block\"\n      });\n      this.setState({\n        hue: \"123\"\n      });\n    };\n\n    this.goBack = () => {\n      this.setState({\n        display2: \"none\"\n      });\n      this.setState({\n        display1: \"block\"\n      });\n    };\n\n    this.state = {\n      display1: \"block\",\n      display2: \"none\",\n      hue: \"\",\n      saturation: \"\",\n      light: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Colors-box\",\n        style: {\n          display: this.state.display1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p1\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"link\",\n          name: \"link\",\n          placeholder: \"insert a spotify link!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.findColor(),\n          class: \"button\",\n          children: \"find the color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Results-box\",\n        style: {\n          display: this.state.display2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p1\",\n          children: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 8\n        }, this), \"ur ugly so it's \", this.state.hue, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.goBack(),\n          class: \"button\",\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/Colors.js"],"names":["Results","React","Component","Colors","constructor","props","findColor","console","log","fetch","then","resp","catch","e","tempo","setState","display1","display2","hue","goBack","state","saturation","light","render","display"],"mappings":";;AACA,OAAO,cAAP;AACA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAYpBC,SAZoB,GAYR,MAAM;AAAE;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAC,MAAAA,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAA0BC,IAAD,IAAQ;AAC/BJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,OAFD,EAEGC,KAFH,CAEUC,CAAD,IAAK;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACD,OAJD;AAKA,UAAIC,KAAK,GAAG,GAAZ;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAd;AACA,WAAKD,QAAL,CAAc;AAACE,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACA,WAAKF,QAAL,CAAc;AAACG,QAAAA,GAAG,EAAC;AAAL,OAAd;AACD,KAvBmB;;AAAA,SAyBpBC,MAzBoB,GAyBX,MAAM;AACb,WAAKJ,QAAL,CAAc;AAACE,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACA,WAAKF,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACD,KA5BmB;;AAGhB,SAAKI,KAAL,GAAa;AACXJ,MAAAA,QAAQ,EAAC,OADE;AAEXC,MAAAA,QAAQ,EAAC,MAFE;AAGXC,MAAAA,GAAG,EAAE,EAHM;AAIXG,MAAAA,UAAU,EAAE,EAJD;AAKXC,MAAAA,KAAK,EAAE;AALI,KAAb;AAOD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACD;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWJ;AAArB,SAAnC;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,WAAW,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFH,oBAE0F;AAAA;AAAA;AAAA;AAAA,gBAF1F,eAGK;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKV,SAAL,EAArB;AAAuC,UAAA,KAAK,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,eAMA;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAACkB,UAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWH;AAArB,SAApC;AAAA,gCACC;AAAG,UAAA,KAAK,EAAC,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,sBAEmB,KAAKG,KAAL,CAAWF,GAF9B,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKC,MAAL,EAArB;AAAoC,UAAA,KAAK,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA7C4B;;AAgD/B,eAAehB,MAAf","sourcesContent":["import logo from './logo.svg';\nimport './Colors.css';\nimport Results from './Results.js';\nimport React, {Component} from \"react\";\n\nclass Colors extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      display1:\"block\",\n      display2:\"none\",\n      hue: \"\",\n      saturation: \"\",\n      light: \"\"\n    }\n  }\n\nfindColor = () => { //fetching from api, based on those values, change state of \n  console.log(\"hi\")\n  fetch(\"google.com\").then((resp)=>{\n    console.log(resp)\n  }).catch((e)=>{\n    console.log(e)\n  })\n  var tempo = 123;\n  this.setState({display1:\"none\"});\n  this.setState({display2: \"block\"});\n  this.setState({hue:\"123\"})\n}\n\ngoBack = () => {\n  this.setState({display2: \"none\"});\n  this.setState({display1: \"block\"});\n}\n  render() {\n    return(\n      <div className=\"Colors\">\n     <div className=\"Colors-box\" style={{display: this.state.display1}}>\n       <p class=\"p1\">spotify colors</p>\n        <input type=\"text\" id=\"link\" name=\"link\" placeholder=\"insert a spotify link!\"></input> <br/>\n          <button onClick={()=>this.findColor()} class=\"button\">find the color</button>\n      </div>\n      <div className=\"Results-box\" style={{display: this.state.display2}}>\n       <p class=\"p1\">red</p>\n        ur ugly so it's {this.state.hue}\n          <button onClick={()=>this.goBack()} class=\"button\">go back</button>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}