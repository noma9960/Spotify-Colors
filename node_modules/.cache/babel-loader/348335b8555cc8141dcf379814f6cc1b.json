{"ast":null,"code":"var redirect_uri = \"https://makeratplay.github.io/SpotifyWebAPI/\"; // change this your value\n//var redirect_uri = \"http://127.0.0.1:5500/index.html\";\n\nvar client_id = \"\";\nvar client_secret = \"\"; // In a real app you should not expose your client_secret to the user\n\nvar access_token = null;\nvar refresh_token = null;\nvar currentPlaylist = \"\";\nvar radioButtons = [];\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\";\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\nconst PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\nconst PLAY = \"https://api.spotify.com/v1/me/player/play\";\nconst PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\nconst NEXT = \"https://api.spotify.com/v1/me/player/next\";\nconst PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\nconst PLAYER = \"https://api.spotify.com/v1/me/player\";\nconst TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\nconst CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\nconst SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\n\nfunction onPageLoad() {\n  client_id = localStorage.getItem(\"client_id\");\n  client_secret = localStorage.getItem(\"client_secret\");\n\n  if (window.location.search.length > 0) {\n    handleRedirect();\n  } else {\n    access_token = localStorage.getItem(\"access_token\");\n\n    if (access_token == null) {\n      // we don't have an access token so present token section\n      document.getElementById(\"tokenSection\").style.display = 'block';\n    } else {\n      // we have an access token so present device section\n      document.getElementById(\"deviceSection\").style.display = 'block';\n      refreshDevices();\n      refreshPlaylists();\n      currentlyPlaying();\n    }\n  }\n\n  refreshRadioButtons();\n}\n\nfunction handleRedirect() {\n  let code = getCode();\n  fetchAccessToken(code);\n  window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n}\n\nfunction getCode() {\n  let code = null;\n  const queryString = window.location.search;\n\n  if (queryString.length > 0) {\n    const urlParams = new URLSearchParams(queryString);\n    code = urlParams.get('code');\n  }\n\n  return code;\n}\n\nfunction requestAuthorization() {\n  client_id = document.getElementById(\"clientId\").value;\n  client_secret = document.getElementById(\"clientSecret\").value;\n  localStorage.setItem(\"client_id\", client_id);\n  localStorage.setItem(\"client_secret\", client_secret); // In a real app you should not expose your client_secret to the user\n\n  let url = AUTHORIZE;\n  url += \"?client_id=\" + client_id;\n  url += \"&response_type=code\";\n  url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n  url += \"&show_dialog=true\";\n  url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n  window.location.href = url; // Show Spotify's authorization screen\n}\n\nfunction fetchAccessToken(code) {\n  let body = \"grant_type=authorization_code\";\n  body += \"&code=\" + code;\n  body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n  body += \"&client_id=\" + client_id;\n  body += \"&client_secret=\" + client_secret;\n  callAuthorizationApi(body);\n}\n\nfunction refreshAccessToken() {\n  refresh_token = localStorage.getItem(\"refresh_token\");\n  let body = \"grant_type=refresh_token\";\n  body += \"&refresh_token=\" + refresh_token;\n  body += \"&client_id=\" + client_id;\n  callAuthorizationApi(body);\n}\n\nfunction callAuthorizationApi(body) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", TOKEN, true);\n  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n  xhr.setRequestHeader('Authorization', 'Basic ' + btoa(client_id + \":\" + client_secret));\n  xhr.send(body);\n  xhr.onload = handleAuthorizationResponse;\n}\n\nfunction handleAuthorizationResponse() {\n  if (this.status == 200) {\n    var data = JSON.parse(this.responseText);\n    console.log(data);\n    var data = JSON.parse(this.responseText);\n\n    if (data.access_token != undefined) {\n      access_token = data.access_token;\n      localStorage.setItem(\"access_token\", access_token);\n    }\n\n    if (data.refresh_token != undefined) {\n      refresh_token = data.refresh_token;\n      localStorage.setItem(\"refresh_token\", refresh_token);\n    }\n\n    onPageLoad();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n}\n\nfunction refreshDevices() {\n  callApi(\"GET\", DEVICES, null, handleDevicesResponse);\n}\n\nfunction handleDevicesResponse() {\n  if (this.status == 200) {\n    var data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"devices\");\n    data.devices.forEach(item => addDevice(item));\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n}\n\nfunction addDevice(item) {\n  let node = document.createElement(\"option\");\n  node.value = item.id;\n  node.innerHTML = item.name;\n  document.getElementById(\"devices\").appendChild(node);\n}\n\nfunction callApi(method, url, body, callback) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n  xhr.send(body);\n  xhr.onload = callback;\n}\n\nfunction refreshPlaylists() {\n  callApi(\"GET\", PLAYLISTS, null, handlePlaylistsResponse);\n}\n\nfunction handlePlaylistsResponse() {\n  if (this.status == 200) {\n    var data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"playlists\");\n    data.items.forEach(item => addPlaylist(item));\n    document.getElementById('playlists').value = currentPlaylist;\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n}\n\nfunction addPlaylist(item) {\n  let node = document.createElement(\"option\");\n  node.value = item.id;\n  node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n  document.getElementById(\"playlists\").appendChild(node);\n}\n\nfunction removeAllItems(elementId) {\n  let node = document.getElementById(elementId);\n\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n}\n\nfunction play() {\n  let playlist_id = document.getElementById(\"playlists\").value;\n  let trackindex = document.getElementById(\"tracks\").value;\n  let album = document.getElementById(\"album\").value;\n  let body = {};\n\n  if (album.length > 0) {\n    body.context_uri = album;\n  } else {\n    body.context_uri = \"spotify:playlist:\" + playlist_id;\n  }\n\n  body.offset = {};\n  body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n  body.offset.position_ms = 0;\n  callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse);\n}\n\nfunction shuffle() {\n  callApi(\"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse);\n  play();\n}\n\nfunction pause() {\n  callApi(\"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nfunction next() {\n  callApi(\"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nfunction previous() {\n  callApi(\"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nfunction transfer() {\n  let body = {};\n  body.device_ids = [];\n  body.device_ids.push(deviceId());\n  callApi(\"PUT\", PLAYER, JSON.stringify(body), handleApiResponse);\n}\n\nfunction handleApiResponse() {\n  if (this.status == 200) {\n    console.log(this.responseText);\n    setTimeout(currentlyPlaying, 2000);\n  } else if (this.status == 204) {\n    setTimeout(currentlyPlaying, 2000);\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n}\n\nfunction deviceId() {\n  return document.getElementById(\"devices\").value;\n}\n\nfunction fetchTracks() {\n  let playlist_id = document.getElementById(\"playlists\").value;\n\n  if (playlist_id.length > 0) {\n    url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n    callApi(\"GET\", url, null, handleTracksResponse);\n  }\n}\n\nfunction handleTracksResponse() {\n  if (this.status == 200) {\n    var data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"tracks\");\n    data.items.forEach((item, index) => addTrack(item, index));\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n}\n\nfunction addTrack(item, index) {\n  let node = document.createElement(\"option\");\n  node.value = index;\n  node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n  document.getElementById(\"tracks\").appendChild(node);\n}\n\nfunction currentlyPlaying() {\n  callApi(\"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse);\n}\n\nfunction handleCurrentlyPlayingResponse() {\n  if (this.status == 200) {\n    var data = JSON.parse(this.responseText);\n    console.log(data);\n\n    if (data.item != null) {\n      document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n      document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n      document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n    }\n\n    if (data.device != null) {\n      // select device\n      currentDevice = data.device.id;\n      document.getElementById('devices').value = currentDevice;\n    }\n\n    if (data.context != null) {\n      // select playlist\n      currentPlaylist = data.context.uri;\n      currentPlaylist = currentPlaylist.substring(currentPlaylist.lastIndexOf(\":\") + 1, currentPlaylist.length);\n      document.getElementById('playlists').value = currentPlaylist;\n    }\n  } else if (this.status == 204) {} else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n}\n\nfunction saveNewRadioButton() {\n  let item = {};\n  item.deviceId = deviceId();\n  item.playlistId = document.getElementById(\"playlists\").value;\n  radioButtons.push(item);\n  localStorage.setItem(\"radio_button\", JSON.stringify(radioButtons));\n  refreshRadioButtons();\n}\n\nfunction refreshRadioButtons() {\n  let data = localStorage.getItem(\"radio_button\");\n\n  if (data != null) {\n    radioButtons = JSON.parse(data);\n\n    if (Array.isArray(radioButtons)) {\n      removeAllItems(\"radioButtons\");\n      radioButtons.forEach((item, index) => addRadioButton(item, index));\n    }\n  }\n}\n\nfunction onRadioButton(deviceId, playlistId) {\n  let body = {};\n  body.context_uri = \"spotify:playlist:\" + playlistId;\n  body.offset = {};\n  body.offset.position = 0;\n  body.offset.position_ms = 0;\n  callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId, JSON.stringify(body), handleApiResponse); //callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId, null, handleApiResponse );\n}\n\nfunction addRadioButton(item, index) {\n  let node = document.createElement(\"button\");\n  node.className = \"btn btn-primary m-2\";\n  node.innerText = index;\n\n  node.onclick = function () {\n    onRadioButton(item.deviceId, item.playlistId);\n  };\n\n  document.getElementById(\"radioButtons\").appendChild(node);\n}","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/App.js"],"names":["redirect_uri","client_id","client_secret","access_token","refresh_token","currentPlaylist","radioButtons","AUTHORIZE","TOKEN","PLAYLISTS","DEVICES","PLAY","PAUSE","NEXT","PREVIOUS","PLAYER","TRACKS","CURRENTLYPLAYING","SHUFFLE","onPageLoad","localStorage","getItem","window","location","search","length","handleRedirect","document","getElementById","style","display","refreshDevices","refreshPlaylists","currentlyPlaying","refreshRadioButtons","code","getCode","fetchAccessToken","history","pushState","queryString","urlParams","URLSearchParams","get","requestAuthorization","value","setItem","url","encodeURI","href","body","callAuthorizationApi","refreshAccessToken","xhr","XMLHttpRequest","open","setRequestHeader","btoa","send","onload","handleAuthorizationResponse","status","data","JSON","parse","responseText","console","log","undefined","alert","callApi","handleDevicesResponse","removeAllItems","devices","forEach","item","addDevice","node","createElement","id","innerHTML","name","appendChild","method","callback","handlePlaylistsResponse","items","addPlaylist","tracks","total","elementId","firstChild","removeChild","play","playlist_id","trackindex","album","context_uri","offset","position","Number","position_ms","deviceId","stringify","handleApiResponse","shuffle","pause","next","previous","transfer","device_ids","push","setTimeout","fetchTracks","replace","handleTracksResponse","index","addTrack","track","artists","handleCurrentlyPlayingResponse","src","images","device","currentDevice","context","uri","substring","lastIndexOf","saveNewRadioButton","playlistId","Array","isArray","addRadioButton","onRadioButton","className","innerText","onclick"],"mappings":"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","sourcesContent":["\nvar redirect_uri = \"https://makeratplay.github.io/SpotifyWebAPI/\"; // change this your value\n//var redirect_uri = \"http://127.0.0.1:5500/index.html\";\n \n\nvar client_id = \"\"; \nvar client_secret = \"\"; // In a real app you should not expose your client_secret to the user\n\nvar access_token = null;\nvar refresh_token = null;\nvar currentPlaylist = \"\";\nvar radioButtons = [];\n\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\"\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\nconst PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\nconst PLAY = \"https://api.spotify.com/v1/me/player/play\";\nconst PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\nconst NEXT = \"https://api.spotify.com/v1/me/player/next\";\nconst PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\nconst PLAYER = \"https://api.spotify.com/v1/me/player\";\nconst TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\nconst CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\nconst SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\n\nfunction onPageLoad(){\n    client_id = localStorage.getItem(\"client_id\");\n    client_secret = localStorage.getItem(\"client_secret\");\n    if ( window.location.search.length > 0 ){\n        handleRedirect();\n    }\n    else{\n        access_token = localStorage.getItem(\"access_token\");\n        if ( access_token == null ){\n            // we don't have an access token so present token section\n            document.getElementById(\"tokenSection\").style.display = 'block';  \n        }\n        else {\n            // we have an access token so present device section\n            document.getElementById(\"deviceSection\").style.display = 'block';  \n            refreshDevices();\n            refreshPlaylists();\n            currentlyPlaying();\n        }\n    }\n    refreshRadioButtons();\n}\n\nfunction handleRedirect(){\n    let code = getCode();\n    fetchAccessToken( code );\n    window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n}\n\nfunction getCode(){\n    let code = null;\n    const queryString = window.location.search;\n    if ( queryString.length > 0 ){\n        const urlParams = new URLSearchParams(queryString);\n        code = urlParams.get('code')\n    }\n    return code;\n}\n\nfunction requestAuthorization(){\n    client_id = document.getElementById(\"clientId\").value;\n    client_secret = document.getElementById(\"clientSecret\").value;\n    localStorage.setItem(\"client_id\", client_id);\n    localStorage.setItem(\"client_secret\", client_secret); // In a real app you should not expose your client_secret to the user\n\n    let url = AUTHORIZE;\n    url += \"?client_id=\" + client_id;\n    url += \"&response_type=code\";\n    url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    url += \"&show_dialog=true\";\n    url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n    window.location.href = url; // Show Spotify's authorization screen\n}\n\nfunction fetchAccessToken( code ){\n    let body = \"grant_type=authorization_code\";\n    body += \"&code=\" + code; \n    body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    body += \"&client_id=\" + client_id;\n    body += \"&client_secret=\" + client_secret;\n    callAuthorizationApi(body);\n}\n\nfunction refreshAccessToken(){\n    refresh_token = localStorage.getItem(\"refresh_token\");\n    let body = \"grant_type=refresh_token\";\n    body += \"&refresh_token=\" + refresh_token;\n    body += \"&client_id=\" + client_id;\n    callAuthorizationApi(body);\n}\n\nfunction callAuthorizationApi(body){\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(client_id + \":\" + client_secret));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n}\n\nfunction handleAuthorizationResponse(){\n    if ( this.status == 200 ){\n        var data = JSON.parse(this.responseText);\n        console.log(data);\n        var data = JSON.parse(this.responseText);\n        if ( data.access_token != undefined ){\n            access_token = data.access_token;\n            localStorage.setItem(\"access_token\", access_token);\n        }\n        if ( data.refresh_token  != undefined ){\n            refresh_token = data.refresh_token;\n            localStorage.setItem(\"refresh_token\", refresh_token);\n        }\n        onPageLoad();\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction refreshDevices(){\n    callApi( \"GET\", DEVICES, null, handleDevicesResponse );\n}\n\nfunction handleDevicesResponse(){\n    if ( this.status == 200 ){\n        var data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems( \"devices\" );\n        data.devices.forEach(item => addDevice(item));\n    }\n    else if ( this.status == 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction addDevice(item){\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name;\n    document.getElementById(\"devices\").appendChild(node); \n}\n\nfunction callApi(method, url, body, callback){\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n    xhr.send(body);\n    xhr.onload = callback;\n}\n\nfunction refreshPlaylists(){\n    callApi( \"GET\", PLAYLISTS, null, handlePlaylistsResponse );\n}\n\nfunction handlePlaylistsResponse(){\n    if ( this.status == 200 ){\n        var data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems( \"playlists\" );\n        data.items.forEach(item => addPlaylist(item));\n        document.getElementById('playlists').value=currentPlaylist;\n    }\n    else if ( this.status == 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction addPlaylist(item){\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n    document.getElementById(\"playlists\").appendChild(node); \n}\n\nfunction removeAllItems( elementId ){\n    let node = document.getElementById(elementId);\n    while (node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n}\n\nfunction play(){\n    let playlist_id = document.getElementById(\"playlists\").value;\n    let trackindex = document.getElementById(\"tracks\").value;\n    let album = document.getElementById(\"album\").value;\n    let body = {};\n    if ( album.length > 0 ){\n        body.context_uri = album;\n    }\n    else{\n        body.context_uri = \"spotify:playlist:\" + playlist_id;\n    }\n    body.offset = {};\n    body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n    body.offset.position_ms = 0;\n    callApi( \"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse );\n}\n\nfunction shuffle(){\n    callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse );\n    play(); \n}\n\nfunction pause(){\n    callApi( \"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse );\n}\n\nfunction next(){\n    callApi( \"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse );\n}\n\nfunction previous(){\n    callApi( \"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse );\n}\n\nfunction transfer(){\n    let body = {};\n    body.device_ids = [];\n    body.device_ids.push(deviceId())\n    callApi( \"PUT\", PLAYER, JSON.stringify(body), handleApiResponse );\n}\n\nfunction handleApiResponse(){\n    if ( this.status == 200){\n        console.log(this.responseText);\n        setTimeout(currentlyPlaying, 2000);\n    }\n    else if ( this.status == 204 ){\n        setTimeout(currentlyPlaying, 2000);\n    }\n    else if ( this.status == 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }    \n}\n\nfunction deviceId(){\n    return document.getElementById(\"devices\").value;\n}\n\nfunction fetchTracks(){\n    let playlist_id = document.getElementById(\"playlists\").value;\n    if ( playlist_id.length > 0 ){\n        url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n        callApi( \"GET\", url, null, handleTracksResponse );\n    }\n}\n\nfunction handleTracksResponse(){\n    if ( this.status == 200 ){\n        var data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems( \"tracks\" );\n        data.items.forEach( (item, index) => addTrack(item, index));\n    }\n    else if ( this.status == 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction addTrack(item, index){\n    let node = document.createElement(\"option\");\n    node.value = index;\n    node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n    document.getElementById(\"tracks\").appendChild(node); \n}\n\nfunction currentlyPlaying(){\n    callApi( \"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse );\n}\n\nfunction handleCurrentlyPlayingResponse(){\n    if ( this.status == 200 ){\n        var data = JSON.parse(this.responseText);\n        console.log(data);\n        if ( data.item != null ){\n            document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n            document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n            document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n        }\n\n\n        if ( data.device != null ){\n            // select device\n            currentDevice = data.device.id;\n            document.getElementById('devices').value=currentDevice;\n        }\n\n        if ( data.context != null ){\n            // select playlist\n            currentPlaylist = data.context.uri;\n            currentPlaylist = currentPlaylist.substring( currentPlaylist.lastIndexOf(\":\") + 1,  currentPlaylist.length );\n            document.getElementById('playlists').value=currentPlaylist;\n        }\n    }\n    else if ( this.status == 204 ){\n\n    }\n    else if ( this.status == 401 ){\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nfunction saveNewRadioButton(){\n    let item = {};\n    item.deviceId = deviceId();\n    item.playlistId = document.getElementById(\"playlists\").value;\n    radioButtons.push(item);\n    localStorage.setItem(\"radio_button\", JSON.stringify(radioButtons));\n    refreshRadioButtons();\n}\n\nfunction refreshRadioButtons(){\n    let data = localStorage.getItem(\"radio_button\");\n    if ( data != null){\n        radioButtons = JSON.parse(data);\n        if ( Array.isArray(radioButtons) ){\n            removeAllItems(\"radioButtons\");\n            radioButtons.forEach( (item, index) => addRadioButton(item, index));\n        }\n    }\n}\n\nfunction onRadioButton( deviceId, playlistId ){\n    let body = {};\n    body.context_uri = \"spotify:playlist:\" + playlistId;\n    body.offset = {};\n    body.offset.position = 0;\n    body.offset.position_ms = 0;\n    callApi( \"PUT\", PLAY + \"?device_id=\" + deviceId, JSON.stringify(body), handleApiResponse );\n    //callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId, null, handleApiResponse );\n}\n\nfunction addRadioButton(item, index){\n    let node = document.createElement(\"button\");\n    node.className = \"btn btn-primary m-2\";\n    node.innerText = index;\n    node.onclick = function() { onRadioButton( item.deviceId, item.playlistId ) };\n    document.getElementById(\"radioButtons\").appendChild(node);\n}"]},"metadata":{},"sourceType":"module"}