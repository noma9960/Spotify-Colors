{"ast":null,"code":"var _jsxFileName = \"/Users/nmargalit/spotify-colors/src/Colors.js\";\nimport logo from \"./logo.svg\";\nimport './Colors.css';\nimport React, { Component } from \"react\";\nimport { TrackFeatures } from 'react-spotify-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goBack = () => {\n      this.state.id = null;\n      this.state.link = null;\n      this.setState({\n        display: true\n      });\n    };\n\n    this.state = {\n      hue: \"\",\n      saturation: \"\",\n      lightness: \"\",\n      color: \"\",\n      id: \"\",\n      link: \"\",\n      display: true\n    };\n  }\n\n  handleLinkChange(e) {\n    var link = e.target.value;\n    this.state.link = link;\n  }\n\n  getSpotifyData() {\n    var songID = this.state.link.split(\"/\")[4];\n    songID = songID.split(\"?\")[0];\n    this.setState({\n      id: songID\n    });\n  }\n\n  findColor(features) {\n    //fetching from api, based on those values, change state of\n    console.log(\"Find Color\");\n    console.log(features.data);\n\n    if (features.data != null) {\n      if (features.data.key != undefined) {\n        console.log(\"Got data\");\n        var songKey = features.data.key;\n        var tempo = features.data.tempo;\n        var energy = features.data.energy;\n\n        if (songKey <= 0) {\n          this.setState({\n            hue: 0\n          });\n        } else if (songKey > 0 && songKey <= 1) {\n          this.setState({\n            hue: 30\n          });\n        } else if (songKey > 1 && songKey <= 2) {\n          this.setState({\n            hue: 60\n          });\n        } else if (songKey > 2 && songKey <= 3) {\n          this.setState({\n            hue: 90\n          });\n        } else if (songKey > 3 && songKey <= 4) {\n          this.setState({\n            hue: 120\n          });\n        } else if (songKey > 4 && songKey <= 5) {\n          this.setState({\n            hue: 150\n          });\n        } else if (songKey > 5 && songKey <= 6) {\n          this.setState({\n            hue: 180\n          });\n        } else if (songKey > 6 && songKey <= 7) {\n          this.setState({\n            hue: 210\n          });\n        } else if (songKey > 7 && songKey <= 8) {\n          this.setState({\n            hue: 240\n          });\n        } else if (songKey > 8 && songKey <= 9) {\n          this.setState({\n            hue: 270\n          });\n        } else if (songKey > 9 && songKey <= 10) {\n          this.setState({\n            hue: 300\n          });\n        } else if (songKey > 10 && songKey <= 11) {\n          this.setState({\n            hue: 330\n          });\n        } else if (songKey > 11 && songKey <= 12) {\n          this.setState({\n            hue: 360\n          });\n        }\n\n        if (tempo > 0 && tempo <= 80) {\n          this.setState({\n            saturation: 20\n          });\n        } else if (tempo > 80 && tempo <= 100) {\n          this.setState({\n            saturation: 35\n          });\n        } else if (tempo > 100 && tempo <= 150) {\n          this.setState({\n            saturation: 40\n          });\n        } else if (tempo > 150 && tempo <= 170) {\n          this.setState({\n            saturation: 60\n          });\n        } else if (tempo > 150 && tempo <= 190) {\n          this.setState({\n            saturation: 80\n          });\n        } else if (tempo > 190 && tempo <= 1000) {\n          this.setState({\n            saturation: 100\n          });\n        }\n\n        if (energy > 0 && energy <= 0.1) {\n          this.setState({\n            lightness: 10\n          });\n        } else if (energy > 0.1 && energy <= 0.2) {\n          this.setState({\n            lightness: 20\n          });\n        } else if (energy > 0.2 && energy <= 0.3) {\n          this.setState({\n            lightness: 30\n          });\n        } else if (energy > 0.3 && energy <= 0.4) {\n          this.setState({\n            lightness: 40\n          });\n        } else if (energy > 0.4 && energy <= 0.5) {\n          this.setState({\n            lightness: 50\n          });\n        } else if (energy > 0.5 && energy <= 0.6) {\n          this.setState({\n            lightness: 60\n          });\n        } else if (energy > 0.6 && energy <= 0.7) {\n          this.setState({\n            lightness: 70\n          });\n        } else if (energy > 0.7 && energy <= 0.8) {\n          this.setState({\n            lightness: 80\n          });\n        } else if (energy > 0.8 && energy <= 0.9) {\n          this.setState({\n            lightness: 90\n          });\n        } else if (energy > 0.9 && energy <= 1.0) {\n          this.setState({\n            lightness: 100\n          });\n        }\n\n        this.setState({\n          color: `hsl(${this.state.hue}, ${this.state.saturation}%, ${this.state.lightness}%)`\n        });\n        this.setState({\n          display: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colors\",\n      children: this.state.display ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Colors-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"link\",\n          name: \"link\",\n          onChange: e => this.handleLinkChange(e),\n          placeholder: \"insert a spotify link!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 139\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.getSpotifyData(),\n          class: \"button\",\n          children: \"find the color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(TrackFeatures, {\n          id: this.state.id,\n          children: features => (this.findColor(features), features ? \"\" : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorCreated\",\n        style: {\n          backgroundColor: this.state.color\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 91\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: [\"your hue is \", this.state.hue, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 57\n          }, this), \"your saturation is \", this.state.saturation, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 53\n          }, this), \"your lightness is \", this.state.lightness, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: [\"your hue is \", this.state.hue, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 57\n          }, this), \"your saturation is \", this.state.saturation, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 53\n          }, this), \"your lightness is \", this.state.lightness, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.goBack(),\n          class: \"button\",\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/Colors.js"],"names":["React","Component","TrackFeatures","Colors","constructor","props","goBack","state","id","link","setState","display","hue","saturation","lightness","color","handleLinkChange","e","target","value","getSpotifyData","songID","split","findColor","features","console","log","data","key","undefined","songKey","tempo","energy","render","backgroundColor"],"mappings":";;AACA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SA0JpBC,MA1JoB,GA0JX,MAAM;AACb,WAAKC,KAAL,CAAWC,EAAX,GAAc,IAAd;AACA,WAAKD,KAAL,CAAWE,IAAX,GAAgB,IAAhB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KA9JmB;;AAGhB,SAAKJ,KAAL,GAAa;AACXK,MAAAA,GAAG,EAAE,EADM;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXP,MAAAA,EAAE,EAAE,EALO;AAMXC,MAAAA,IAAI,EAAE,EANK;AAOXE,MAAAA,OAAO,EAAE;AAPE,KAAb;AASD;;AAEDK,EAAAA,gBAAgB,CAACC,CAAD,EAAG;AACjB,QAAIR,IAAI,GAAGQ,CAAC,CAACC,MAAF,CAASC,KAApB;AACA,SAAKZ,KAAL,CAAWE,IAAX,GAAgBA,IAAhB;AAID;;AAEDW,EAAAA,cAAc,GACd;AAEI,QAAIC,MAAM,GAAG,KAAKd,KAAL,CAAWE,IAAX,CAAgBa,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAb;AACAD,IAAAA,MAAM,GAAGA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAT;AAEA,SAAKZ,QAAL,CAAc;AAACF,MAAAA,EAAE,EAAEa;AAAL,KAAd;AAEH;;AAEDE,EAAAA,SAAS,CAACC,QAAD,EACV;AAAE;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AAEA,QAAIH,QAAQ,CAACG,IAAT,IAAe,IAAnB,EACA;AAEA,UAAIH,QAAQ,CAACG,IAAT,CAAcC,GAAd,IAAqBC,SAAzB,EACA;AAEEJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACF,YAAII,OAAO,GAAGN,QAAQ,CAACG,IAAT,CAAcC,GAA5B;AACA,YAAIG,KAAK,GAAGP,QAAQ,CAACG,IAAT,CAAcI,KAA1B;AACA,YAAIC,MAAM,GAAGR,QAAQ,CAACG,IAAT,CAAcK,MAA3B;;AAGA,YAAGF,OAAO,IAAI,CAAd,EAAgB;AACd,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFD,MAGK,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,CAA7B,EAA+B;AAClC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,EAA7B,EAAgC;AACnC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,EAAV,IAAgBA,OAAO,IAAI,EAA9B,EAAiC;AACpC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD,SAFI,MAGA,IAAGkB,OAAO,GAAG,EAAV,IAAgBA,OAAO,IAAI,EAA9B,EAAiC;AACpC,eAAKpB,QAAL,CAAc;AAACE,YAAAA,GAAG,EAAE;AAAN,WAAd;AACD;;AAED,YAAGmB,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,EAAzB,EAA4B;AAC1B,eAAKrB,QAAL,CAAc;AAACG,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD,SAFD,MAIK,IAAGkB,KAAK,GAAG,EAAR,IAAcA,KAAK,IAAI,GAA1B,EAA8B;AACjC,eAAKrB,QAAL,CAAc;AAACG,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD,SAFI,MAIA,IAAGkB,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA3B,EAA+B;AAClC,eAAKrB,QAAL,CAAc;AAACG,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD,SAFI,MAIA,IAAGkB,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA3B,EAA+B;AAClC,eAAKrB,QAAL,CAAc;AAACG,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD,SAFI,MAIA,IAAGkB,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,GAA3B,EAA+B;AAClC,eAAKrB,QAAL,CAAc;AAACG,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD,SAFI,MAIA,IAAGkB,KAAK,GAAG,GAAR,IAAeA,KAAK,IAAI,IAA3B,EAAgC;AACnC,eAAKrB,QAAL,CAAc;AAACG,YAAAA,UAAU,EAAE;AAAb,WAAd;AACD;;AAED,YAAGmB,MAAM,GAAG,CAAT,IAAcA,MAAM,IAAI,GAA3B,EAA+B;AAC7B,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFD,MAIK,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAIA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAIA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAGA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAGA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAGA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAGA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAGA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD,SAFI,MAGA,IAAGkB,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA7B,EAAiC;AACpC,eAAKtB,QAAL,CAAc;AAACI,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACD;;AAED,aAAKJ,QAAL,CAAc;AAACK,UAAAA,KAAK,EAAG,OAAO,KAAKR,KAAL,CAAWK,GAAK,KAAK,KAAKL,KAAL,CAAWM,UAAY,MAAM,KAAKN,KAAL,CAAWO,SAAW;AAAxF,SAAd;AACA,aAAKJ,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAd;AAED;AACE;AACF;;AAOCsB,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACG,KAAK1B,KAAL,CAAWI,OAAX,gBACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,QAAQ,EAAGM,CAAD,IAAO,KAAKD,gBAAL,CAAsBC,CAAtB,CAA1D;AAAoF,UAAA,WAAW,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,gBAFD,oBAEmI;AAAA;AAAA;AAAA;AAAA,gBAFnI,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKG,cAAL,EAArB;AAA4C,UAAA,KAAK,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIC,QAAC,aAAD;AAAe,UAAA,EAAE,EAAE,KAAKb,KAAL,CAAWC,EAA9B;AAAA,oBACIgB,QAAD,KACG,KAAKD,SAAL,CAAeC,QAAf,GACAA,QAAQ,GACP,EADO,GAEJ,IAJP;AADH;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAaQ;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAACU,UAAAA,eAAe,EAAE,KAAK3B,KAAL,CAAWQ;AAA7B,SAArC;AAAA,qCAA2E;AAAA;AAAA;AAAA;AAAA,gBAA3E,eAER;AAAG,UAAA,SAAS,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFQ,eAGR;AAAG,UAAA,SAAS,EAAC,IAAb;AAAA,qCAAgC,KAAKR,KAAL,CAAWK,GAA3C,qBAAiD;AAAA;AAAA;AAAA;AAAA,kBAAjD,yBACqB,KAAKL,KAAL,CAAWM,UADhC,qBAC6C;AAAA;AAAA;AAAA;AAAA,kBAD7C,wBAEoB,KAAKN,KAAL,CAAWO,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHQ,eAOR;AAAG,UAAA,SAAS,EAAC,IAAb;AAAA,qCAAgC,KAAKP,KAAL,CAAWK,GAA3C,qBAAiD;AAAA;AAAA;AAAA;AAAA,kBAAjD,yBACqB,KAAKL,KAAL,CAAWM,UADhC,qBAC6C;AAAA;AAAA;AAAA;AAAA,kBAD7C,wBAEoB,KAAKN,KAAL,CAAWO,SAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPQ,eAWL;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKR,MAAL,EAArB;AAAoC,UAAA,KAAK,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAdX;AAAA;AAAA;AAAA;AAAA,YADA;AA+BD;;AAhM4B;;AAmM/B,eAAeH,MAAf","sourcesContent":["import logo from './logo.svg';\nimport './Colors.css';\nimport React, {Component} from \"react\";\nimport { TrackFeatures } from 'react-spotify-api'\n\nclass Colors extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      hue: \"\",\n      saturation: \"\",\n      lightness: \"\",\n      color: \"\",\n      id: \"\",\n      link: \"\",\n      display: true\n    }\n  }\n\n  handleLinkChange(e){\n    var link = e.target.value;\n    this.state.link=link;\n\n  \n  \n  }\n\n  getSpotifyData()\n  {\n\n      var songID = this.state.link.split(\"/\")[4];\n      songID = songID.split(\"?\")[0];\n  \n      this.setState({id: songID});\n    \n  }\n\n  findColor(features)\n { //fetching from api, based on those values, change state of\n  console.log(\"Find Color\");\n  console.log(features.data);\n  \n  if (features.data!=null)\n  {\n\n  if (features.data.key != undefined )\n  {\n\n    console.log(\"Got data\");\n  var songKey = features.data.key;\n  var tempo = features.data.tempo;\n  var energy = features.data.energy;\n\n\n  if(songKey <= 0){\n    this.setState({hue: 0})\n  }\n  else if(songKey > 0 && songKey <= 1){\n    this.setState({hue: 30})\n  }\n  else if(songKey > 1 && songKey <= 2){\n    this.setState({hue: 60})\n  }\n  else if(songKey > 2 && songKey <= 3){\n    this.setState({hue: 90})\n  }\n  else if(songKey > 3 && songKey <= 4){\n    this.setState({hue: 120})\n  }\n  else if(songKey > 4 && songKey <= 5){\n    this.setState({hue: 150})\n  }\n  else if(songKey > 5 && songKey <= 6){\n    this.setState({hue: 180})\n  }\n  else if(songKey > 6 && songKey <= 7){\n    this.setState({hue: 210})\n  }\n  else if(songKey > 7 && songKey <= 8){\n    this.setState({hue: 240})\n  }\n  else if(songKey > 8 && songKey <= 9){\n    this.setState({hue: 270})\n  }\n  else if(songKey > 9 && songKey <= 10){\n    this.setState({hue: 300})\n  }\n  else if(songKey > 10 && songKey <= 11){\n    this.setState({hue: 330})\n  }\n  else if(songKey > 11 && songKey <= 12){\n    this.setState({hue: 360})\n  }\n  \n  if(tempo > 0 && tempo <= 80){\n    this.setState({saturation: 20})\n  }\n\n  else if(tempo > 80 && tempo <= 100){\n    this.setState({saturation: 35})\n  } \n\n  else if(tempo > 100 && tempo <= 150){\n    this.setState({saturation: 40})\n  } \n\n  else if(tempo > 150 && tempo <= 170){\n    this.setState({saturation: 60})\n  } \n\n  else if(tempo > 150 && tempo <= 190){\n    this.setState({saturation: 80})\n  }\n\n  else if(tempo > 190 && tempo <= 1000){\n    this.setState({saturation: 100})\n  }\n\n  if(energy > 0 && energy <= 0.1){\n    this.setState({lightness: 10})\n  }\n\n  else if(energy > 0.1 && energy <= 0.2){\n    this.setState({lightness: 20})\n  }\n\n  else if(energy > 0.2 && energy <= 0.3){\n    this.setState({lightness: 30})\n  }\n\n  else if(energy > 0.3 && energy <= 0.4){\n    this.setState({lightness: 40})\n  }\n  else if(energy > 0.4 && energy <= 0.5){\n    this.setState({lightness: 50})\n  }\n  else if(energy > 0.5 && energy <= 0.6){\n    this.setState({lightness: 60})\n  }\n  else if(energy > 0.6 && energy <= 0.7){\n    this.setState({lightness: 70})\n  }\n  else if(energy > 0.7 && energy <= 0.8){\n    this.setState({lightness: 80})\n  }\n  else if(energy > 0.8 && energy <= 0.9){\n    this.setState({lightness: 90})\n  }\n  else if(energy > 0.9 && energy <= 1.0){\n    this.setState({lightness: 100})\n  }\n\n  this.setState({color: `hsl(${(this.state.hue)}, ${(this.state.saturation)}%, ${(this.state.lightness)}%)`});\n  this.setState({display: false});\n  \n}\n  }\n}\n\ngoBack = () => {\n  this.state.id=null;\n  this.state.link=null; \n  this.setState({display: true});\n}\n  render() {\n    return(\n    <div className=\"Colors\">\n      {this.state.display ?\n       <div className=\"Colors-box\"> \n       <p className=\"p\">spotify colors</p>\n        <input type=\"text\" id=\"link\" name=\"link\" onChange={(e) => this.handleLinkChange(e)} placeholder=\"insert a spotify link!\"></input> <br/>\n         <button onClick={()=>this.getSpotifyData()} class=\"button\">find the color</button> \n        <TrackFeatures id={this.state.id}>\n          {(features) => (\n              this.findColor(features),\n              features ? (\n               \"\"                     \n              ) : null\n          )}\n      </TrackFeatures>     \n      </div> : <div className=\"ColorCreated\" style={{backgroundColor: this.state.color}}> <br/>\n      \n       <p className=\"p\">spotify colors</p>\n       <p className=\"p1\" >your hue is {this.state.hue}  <br/>\n        your saturation is {this.state.saturation}  <br/>\n        your lightness is {this.state.lightness}  </p> \n        \n       <p className=\"p1\" >your hue is {this.state.hue}  <br/>\n        your saturation is {this.state.saturation}  <br/>\n        your lightness is {this.state.lightness}  </p> \n\n          <button onClick={()=>this.goBack()} class=\"button\">go back</button>\n      </div>\n      }\n    </div>\n    )\n  }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}