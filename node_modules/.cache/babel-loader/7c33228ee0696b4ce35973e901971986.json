{"ast":null,"code":"var _jsxFileName = \"/Users/nmargalit/spotify-colors/src/Colors.js\";\nimport logo from \"./logo.svg\";\nimport './Colors.css';\nimport React, { Component } from \"react\";\nimport { TrackFeatures } from 'react-spotify-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findColor = features => {\n      //fetching from api, based on those values, change state of\n      console.log(features);\n      var songKey = features.data.key;\n      var tempo = features.data.tempo;\n      var energy = features.data.energy;\n\n      if (songKey <= 0) {\n        this.setState({\n          hue: 0\n        });\n      } else if (songKey > 0 && songKey <= 1) {\n        this.setState({\n          hue: 30\n        });\n      } else if (songKey > 1 && songKey <= 2) {\n        this.setState({\n          hue: 60\n        });\n      } else if (songKey > 2 && songKey <= 3) {\n        this.setState({\n          hue: 90\n        });\n      } else if (songKey > 3 && songKey <= 4) {\n        this.setState({\n          hue: 120\n        });\n      } else if (songKey > 4 && songKey <= 5) {\n        this.setState({\n          hue: 150\n        });\n      } else if (songKey > 5 && songKey <= 6) {\n        this.setState({\n          hue: 180\n        });\n      } else if (songKey > 6 && songKey <= 7) {\n        this.setState({\n          hue: 210\n        });\n      } else if (songKey > 7 && songKey <= 8) {\n        this.setState({\n          hue: 240\n        });\n      } else if (songKey > 8 && songKey <= 9) {\n        this.setState({\n          hue: 270\n        });\n      } else if (songKey > 9 && songKey <= 10) {\n        this.setState({\n          hue: 300\n        });\n      } else if (songKey > 10 && songKey <= 11) {\n        this.setState({\n          hue: 330\n        });\n      } else if (songKey > 11 && songKey <= 12) {\n        this.setState({\n          hue: 360\n        });\n      }\n\n      if (tempo > 0 && tempo <= 80) {\n        this.setState({\n          saturation: 20\n        });\n      } else if (tempo > 80 && tempo <= 100) {\n        this.setState({\n          saturation: 35\n        });\n      } else if (tempo > 100 && tempo <= 150) {\n        this.setState({\n          saturation: 40\n        });\n      } else if (tempo > 150 && tempo <= 170) {\n        this.setState({\n          saturation: 60\n        });\n      } else if (tempo > 150 && tempo <= 190) {\n        this.setState({\n          saturation: 80\n        });\n      } else if (tempo > 190 && tempo <= 1000) {\n        this.setState({\n          saturation: 100\n        });\n      }\n\n      if (energy > 0 && energy <= 0.1) {\n        this.setState({\n          lightness: 10\n        });\n      } else if (energy > 0.1 && energy <= 0.2) {\n        this.setState({\n          lightness: 20\n        });\n      } else if (energy > 0.2 && energy <= 0.3) {\n        this.setState({\n          lightness: 30\n        });\n      } else if (energy > 0.3 && energy <= 0.4) {\n        this.setState({\n          lightness: 40\n        });\n      } else if (energy > 0.4 && energy <= 0.5) {\n        this.setState({\n          lightness: 50\n        });\n      } else if (energy > 0.5 && energy <= 0.6) {\n        this.setState({\n          lightness: 60\n        });\n      } else if (energy > 0.6 && energy <= 0.7) {\n        this.setState({\n          lightness: 70\n        });\n      } else if (energy > 0.7 && energy <= 0.8) {\n        this.setState({\n          lightness: 80\n        });\n      } else if (energy > 0.8 && energy <= 0.9) {\n        this.setState({\n          lightness: 90\n        });\n      } else if (energy > 0.9 && energy <= 1.0) {\n        this.setState({\n          lightness: 100\n        });\n      }\n\n      this.setState({\n        color: `hsl(${this.state.hue}, ${this.state.saturation}%, ${this.state.lightness}%)`\n      });\n      this.setState({\n        display: false\n      });\n    };\n\n    this.goBack = () => {\n      this.setState({\n        color: \"rgb(226, 213, 198)\"\n      });\n      this.setState({\n        display: true\n      });\n    };\n\n    this.state = {\n      hue: \"\",\n      saturation: \"\",\n      lightness: \"\",\n      color: \"\",\n      id: \"\",\n      link: \"\",\n      display: true\n    };\n  }\n\n  handleLinkChange(e) {\n    var link = e.target.value;\n\n    if (link !== \"\") {\n      var songID = link.split(\"/\")[4];\n      songID = songID.split(\"?\")[0];\n      this.setState({\n        id: songID\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colors\",\n      children: this.state.display ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Colors-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"link\",\n          name: \"link\",\n          onChange: e => this.handleLinkChange(e),\n          placeholder: \"insert a spotify link!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 139\n        }, this), /*#__PURE__*/_jsxDEV(TrackFeatures, {\n          id: this.state.id,\n          children: features => features ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.findColor(features),\n            class: \"button\",\n            children: \"find the color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorCreated\",\n        style: {\n          backgroundColor: this.state.color\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 91\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: [\"your hue is \", this.state.hue, \"your saturation is \", this.state.saturation, \"your lightness is \", this.state.lightness, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.goBack(),\n          class: \"button\",\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/Colors.js"],"names":["React","Component","TrackFeatures","Colors","constructor","props","findColor","features","console","log","songKey","data","key","tempo","energy","setState","hue","saturation","lightness","color","state","display","goBack","id","link","handleLinkChange","e","target","value","songID","split","render","backgroundColor"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './Colors.css';\nimport React, {Component} from \"react\";\nimport { TrackFeatures } from 'react-spotify-api'\n\nclass Colors extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      hue: \"\",\n      saturation: \"\",\n      lightness: \"\",\n      color: \"\",\n      id: \"\",\n      link: \"\",\n      display: true\n    }\n  }\n\n  handleLinkChange(e){\n    var link = e.target.value;\n    if(link !== \"\"){\n      var songID = link.split(\"/\")[4];\n      songID = songID.split(\"?\")[0];\n  \n      this.setState({id: songID});\n    }\n  \n  }\n\nfindColor = (features) => { //fetching from api, based on those values, change state of\n  console.log(features);\n  var songKey = features.data.key;\n  var tempo = features.data.tempo;\n  var energy = features.data.energy;\n\n  if(songKey <= 0){\n    this.setState({hue: 0})\n  }\n  else if(songKey > 0 && songKey <= 1){\n    this.setState({hue: 30})\n  }\n  else if(songKey > 1 && songKey <= 2){\n    this.setState({hue: 60})\n  }\n  else if(songKey > 2 && songKey <= 3){\n    this.setState({hue: 90})\n  }\n  else if(songKey > 3 && songKey <= 4){\n    this.setState({hue: 120})\n  }\n  else if(songKey > 4 && songKey <= 5){\n    this.setState({hue: 150})\n  }\n  else if(songKey > 5 && songKey <= 6){\n    this.setState({hue: 180})\n  }\n  else if(songKey > 6 && songKey <= 7){\n    this.setState({hue: 210})\n  }\n  else if(songKey > 7 && songKey <= 8){\n    this.setState({hue: 240})\n  }\n  else if(songKey > 8 && songKey <= 9){\n    this.setState({hue: 270})\n  }\n  else if(songKey > 9 && songKey <= 10){\n    this.setState({hue: 300})\n  }\n  else if(songKey > 10 && songKey <= 11){\n    this.setState({hue: 330})\n  }\n  else if(songKey > 11 && songKey <= 12){\n    this.setState({hue: 360})\n  }\n  \n  if(tempo > 0 && tempo <= 80){\n    this.setState({saturation: 20})\n  }\n\n  else if(tempo > 80 && tempo <= 100){\n    this.setState({saturation: 35})\n  } \n\n  else if(tempo > 100 && tempo <= 150){\n    this.setState({saturation: 40})\n  } \n\n  else if(tempo > 150 && tempo <= 170){\n    this.setState({saturation: 60})\n  } \n\n  else if(tempo > 150 && tempo <= 190){\n    this.setState({saturation: 80})\n  }\n\n  else if(tempo > 190 && tempo <= 1000){\n    this.setState({saturation: 100})\n  }\n\n  if(energy > 0 && energy <= 0.1){\n    this.setState({lightness: 10})\n  }\n\n  else if(energy > 0.1 && energy <= 0.2){\n    this.setState({lightness: 20})\n  }\n\n  else if(energy > 0.2 && energy <= 0.3){\n    this.setState({lightness: 30})\n  }\n\n  else if(energy > 0.3 && energy <= 0.4){\n    this.setState({lightness: 40})\n  }\n  else if(energy > 0.4 && energy <= 0.5){\n    this.setState({lightness: 50})\n  }\n  else if(energy > 0.5 && energy <= 0.6){\n    this.setState({lightness: 60})\n  }\n  else if(energy > 0.6 && energy <= 0.7){\n    this.setState({lightness: 70})\n  }\n  else if(energy > 0.7 && energy <= 0.8){\n    this.setState({lightness: 80})\n  }\n  else if(energy > 0.8 && energy <= 0.9){\n    this.setState({lightness: 90})\n  }\n  else if(energy > 0.9 && energy <= 1.0){\n    this.setState({lightness: 100})\n  }\n\n  this.setState({color: `hsl(${(this.state.hue)}, ${(this.state.saturation)}%, ${(this.state.lightness)}%)`});\n  this.setState({display: false});\n}\n\ngoBack = () => {\n  this.setState({color: \"rgb(226, 213, 198)\"});\n  this.setState({display: true});\n}\n  render() {\n    return(\n    <div className=\"Colors\">\n      {this.state.display ?\n       <div className=\"Colors-box\"> \n       <p className=\"p\">spotify colors</p>\n        <input type=\"text\" id=\"link\" name=\"link\" onChange={(e) => this.handleLinkChange(e)} placeholder=\"insert a spotify link!\"></input> <br/>\n        <TrackFeatures id={this.state.id}>\n          {(features) => (\n              features ? (\n                  <button onClick={()=>this.findColor(features)} class=\"button\">find the color</button>     \n              ) : null\n          )}\n      </TrackFeatures>     \n      </div> : <div className=\"ColorCreated\" style={{backgroundColor: this.state.color}}> <br/>\n       <p className=\"p\">spotify colors</p>\n       <p className=\"p1\" >your hue is {this.state.hue}  \n        your saturation is {this.state.saturation}  \n        your lightness is {this.state.lightness}  </p> \n\n          <button onClick={()=>this.goBack()} class=\"button\">go back</button>\n      </div>\n      }\n    </div>\n    )\n  }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}