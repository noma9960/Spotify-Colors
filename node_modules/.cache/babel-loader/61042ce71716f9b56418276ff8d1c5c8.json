{"ast":null,"code":"var _jsxFileName = \"/Users/nmargalit/spotify-colors/src/Colors.js\";\nimport logo from \"./logo.svg\";\nimport './Colors.css';\nimport Results from './Results.js';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findColor = () => {\n      //fetching from api, based on those values, change state of \n      console.log(\"hi\");\n      fetch(\"google.com\").then(resp => {\n        console.log(resp);\n      }).catch(e => {\n        console.log(e);\n      });\n      var key = 2;\n      var tempo = 123;\n      var energy = 0.578;\n\n      if (key = 0) {\n        this.setState({\n          hue: 0\n        });\n      }\n\n      if (key = 1) {\n        this.setState({\n          hue: 30\n        });\n      }\n\n      if (key = 2) {\n        this.setState({\n          hue: 60\n        });\n      }\n\n      if (key = 3) {\n        this.setState({\n          hue: 90\n        });\n      }\n\n      if (key = 4) {\n        this.setState({\n          hue: 120\n        });\n      }\n\n      if (key = 5) {\n        this.setState({\n          hue: 150\n        });\n      }\n\n      if (key = 6) {\n        this.setState({\n          hue: 180\n        });\n      }\n\n      if (key = 7) {\n        this.setState({\n          hue: 210\n        });\n      }\n\n      if (key = 8) {\n        this.setState({\n          hue: 240\n        });\n      }\n\n      if (key = 9) {\n        this.setState({\n          hue: 270\n        });\n      }\n\n      if (key = 10) {\n        this.setState({\n          hue: 300\n        });\n      }\n\n      if (key = 11) {\n        this.setState({\n          hue: 330\n        });\n      }\n\n      if (key = 12) {\n        this.setState({\n          hue: 360\n        });\n      }\n\n      if (tempo > 0 && tempo <= 80) {\n        this.setState({\n          saturation: 20\n        });\n      }\n\n      if (tempo > 80 && tempo <= 100) {\n        this.setState({\n          saturation: 35\n        });\n      }\n\n      if (tempo > 100 && tempo <= 150) {\n        this.setState({\n          saturation: 40\n        });\n      }\n\n      if (tempo > 150 && tempo <= 170) {\n        this.setState({\n          saturation: 60\n        });\n      }\n\n      if (tempo > 150 && tempo <= 190) {\n        this.setState({\n          saturation: 80\n        });\n      }\n\n      if (tempo > 190 && tempo <= 1000) {\n        this.setState({\n          saturation: 100\n        });\n      }\n\n      if (energy > 0 && tempo <= 0.1) {\n        this.setState({\n          lightness: 10\n        });\n      }\n\n      if (energy > 0.1 && tempo <= 0.2) {\n        this.setState({\n          lightness: 20\n        });\n      }\n\n      if (energy > 0.2 && tempo <= 0.3) {\n        this.setState({\n          lightness: 10\n        });\n      }\n\n      this.setState({\n        display1: \"none\"\n      });\n      this.setState({\n        display2: \"block\"\n      });\n    };\n\n    this.goBack = () => {\n      this.setState({\n        display2: \"none\"\n      });\n      this.setState({\n        display1: \"block\"\n      });\n    };\n\n    this.state = {\n      display1: \"block\",\n      display2: \"none\",\n      hue: \"\",\n      saturation: \"\",\n      lightness: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Colors-box\",\n        style: {\n          display: this.state.display1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p1\",\n          children: \"spotify colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"link\",\n          name: \"link\",\n          placeholder: \"insert a spotify link!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.findColor(),\n          class: \"button\",\n          children: \"find the color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Results-box\",\n        style: {\n          display: this.state.display2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"p1\",\n          children: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 8\n        }, this), \"your hue is \", this.state.hue, \"your saturation is \", this.state.saturation, \"your lightness is \", this.state.lightness, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.goBack(),\n          class: \"button\",\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Colors;","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/Colors.js"],"names":["Results","React","Component","Colors","constructor","props","findColor","console","log","fetch","then","resp","catch","e","key","tempo","energy","setState","hue","saturation","lightness","display1","display2","goBack","state","render","display"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './Colors.css';\nimport Results from './Results.js';\nimport React, {Component} from \"react\";\n\nclass Colors extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      display1:\"block\",\n      display2:\"none\",\n      hue: \"\",\n      saturation: \"\",\n      lightness: \"\"\n    }\n  }\n\nfindColor = () => { //fetching from api, based on those values, change state of \n  console.log(\"hi\")\n  fetch(\"google.com\").then((resp)=>{\n    console.log(resp)\n  }).catch((e)=>{\n    console.log(e)\n  })\n  var key = 2;\n  var tempo = 123;\n  var energy = 0.578;\n\n  if(key=0){\n    this.setState({hue: 0})\n  }\n\n  if(key=1){\n    this.setState({hue: 30})\n  }\n  if(key=2){\n    this.setState({hue: 60})\n  }\n  if(key=3){\n    this.setState({hue: 90})\n  }\n  if(key=4){\n    this.setState({hue: 120})\n  }\n  if(key=5){\n    this.setState({hue: 150})\n  }\n  if(key=6){\n    this.setState({hue: 180})\n  }\n  if(key=7){\n    this.setState({hue: 210})\n  }\n  if(key=8){\n    this.setState({hue: 240})\n  }\n  if(key=9){\n    this.setState({hue: 270})\n  }\n  if(key=10){\n    this.setState({hue: 300})\n  }\n  if(key=11){\n    this.setState({hue: 330})\n  }\n  if(key=12){\n    this.setState({hue: 360})\n  }\n  \n  if(tempo > 0 && tempo <= 80){\n    this.setState({saturation: 20})\n  }\n\n  if(tempo > 80 && tempo <= 100){\n    this.setState({saturation: 35})\n  } \n\n  if(tempo > 100 && tempo <= 150){\n    this.setState({saturation: 40})\n  } \n\n  if(tempo > 150 && tempo <= 170){\n    this.setState({saturation: 60})\n  } \n\n  if(tempo > 150 && tempo <= 190){\n    this.setState({saturation: 80})\n  }\n\n  if(tempo > 190 && tempo <= 1000){\n    this.setState({saturation: 100})\n  }\n\n  if(energy > 0 && tempo <= 0.1){\n    this.setState({lightness: 10})\n  }\n\n  if(energy > 0.1 && tempo <= 0.2){\n    this.setState({lightness: 20})\n  }\n\n  if(energy > 0.2 && tempo <= 0.3){\n    this.setState({lightness: 10})\n  }\n\n  this.setState({display1:\"none\"});\n  this.setState({display2: \"block\"});\n}\n\ngoBack = () => {\n  this.setState({display2: \"none\"});\n  this.setState({display1: \"block\"});\n}\n  render() {\n    return(\n      <div className=\"Colors\">\n     <div className=\"Colors-box\" style={{display: this.state.display1}}>\n       <p class=\"p1\">spotify colors</p>\n        <input type=\"text\" id=\"link\" name=\"link\" placeholder=\"insert a spotify link!\"></input> <br/>\n          <button onClick={()=>this.findColor()} class=\"button\">find the color</button>\n      </div>\n      <div className=\"Results-box\" style={{display: this.state.display2}}>\n       <p class=\"p1\">red</p>\n        your hue is {this.state.hue}\n        your saturation is {this.state.saturation}\n        your lightness is {this.state.lightness}\n\n          <button onClick={()=>this.goBack()} class=\"button\">go back</button>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}