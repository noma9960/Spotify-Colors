{"ast":null,"code":"var _jsxFileName = \"/Users/nmargalit/spotify-colors/src/App.js\";\nimport React from 'react';\nimport { SpotifyApiContext } from 'react-spotify-api';\nimport Cookies from 'js-cookie';\nimport { SpotifyAuth, Scopes } from 'react-spotify-auth';\nimport 'react-spotify-auth/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const token = Cookies.get('spotifyAuthToken');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(SpotifyApiContext.Provider, {\n      value: token,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You are authorized with token: \", token]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Display the login page\n    _jsxDEV(SpotifyAuth, {\n      redirectUri: \"http://localhost:3000/callback\",\n      clientID: \"1a70ba777fec4ffd9633c0c418bdcf39\",\n      scopes: [Scopes.userReadPrivate, 'user-read-email'] // either style will work\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nmargalit/spotify-colors/src/App.js"],"names":["React","SpotifyApiContext","Cookies","SpotifyAuth","Scopes","App","token","get","userReadPrivate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,oBAApC;AACA,OAAO,mCAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGJ,OAAO,CAACK,GAAR,CAAY,kBAAZ,CAAd;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,KAAK,gBACJ,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAEA,KAAnC;AAAA,6BAEE;AAAA,sDAAmCA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADI;AAAA;AAMJ;AACA,YAAC,WAAD;AACE,MAAA,WAAW,EAAC,gCADd;AAEE,MAAA,QAAQ,EAAC,kCAFX;AAGE,MAAA,MAAM,EAAE,CAACF,MAAM,CAACI,eAAR,EAAyB,iBAAzB,CAHV,CAGuD;;AAHvD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnBD;;KAAMH,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport { SpotifyApiContext } from 'react-spotify-api'\nimport Cookies from 'js-cookie'\n\nimport { SpotifyAuth, Scopes } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css'\n\nconst App = () => {\n  const token = Cookies.get('spotifyAuthToken')\n  return (\n    <div className='app'>\n      {token ? (\n        <SpotifyApiContext.Provider value={token}>\n          {/* Your Spotify Code here */}\n          <p>You are authorized with token: {token}</p>\n        </SpotifyApiContext.Provider>\n      ) : (\n        // Display the login page\n        <SpotifyAuth\n          redirectUri='http://localhost:3000/callback'\n          clientID='1a70ba777fec4ffd9633c0c418bdcf39'\n          scopes={[Scopes.userReadPrivate, 'user-read-email']} // either style will work\n        />\n      )}\n    </div>\n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}